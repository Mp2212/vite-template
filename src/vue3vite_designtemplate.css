<template>
  <div class="report-wrapper container-xl py-4">
    <!-- ðŸ”¹ Filter Form -->
    <div class="card shadow-sm border-0 p-4 mb-4 form-block">
      <!-- Title as Card Header -->
      <div class="card-title d-flex align-items-center mb-4">
        <i class="fas fa-database fa-lg text-primary me-2"></i>
        <h6 class="mb-0 ">SIT1 Cycle0 Report</h6>
      </div>

      <div class="row gx-4 gy-3 align-items-end">
  <!-- Branch -->
  <div class="col-auto">
    <label class="form-label fw-medium mb-1">
      <i class="fas fa-code-branch me-1 text-secondary"></i> Branch
    </label>
    <select v-model="selectedBranch" class="form-select fixed-select">
      <option v-for="branch in branchOptions" :key="branch" :value="branch">{{ branch }}</option>
    </select>
  </div>

  <!-- Artifact Type -->
  <div class="col-auto">
    <label class="form-label fw-medium mb-1">
      <i class="fas fa-cubes me-1 text-secondary"></i> Artifact Type
    </label>
    <select v-model="selectedArtifact" class="form-select fixed-select">
      <option v-for="type in artifactTypes" :key="type" :value="type">{{ type }}</option>
    </select>
  </div>

  <!-- Environment -->
  <div class="col-auto">
    <label class="form-label fw-medium mb-1">
      <i class="fas fa-server me-1 text-secondary"></i> Environment
    </label>
    <select v-model="selectedEnvironment" class="form-select fixed-select">
      <option v-for="env in environments" :key="env" :value="env">{{ env }}</option>
    </select>
  </div>

  <!-- CodeDrop -->
  <div class="col-auto">
    <label class="form-label fw-medium mb-1">
      <i class="fas fa-sync-alt me-1 text-secondary"></i> CodeDrop
    </label>
    <div class="form-check form-switch mt-1">
      <input class="form-check-input" type="checkbox" v-model="codeDrop" id="codeDropSwitch" />
      <label class="form-check-label small" for="codeDropSwitch">{{ codeDrop ? 'Yes' : 'No' }}</label>
    </div>
  </div>

  <!-- Search Button -->
  <div class="col-auto align-self-end">
    <button
      class="btn btn-sm btn-outline-primary rounded-circle search-button"
      @click="fetchReport"
      :disabled="!selectedBranch || !selectedArtifact || !selectedEnvironment"
    >
      <i class="fas fa-search"></i>
    </button>
  </div>
</div>
    </div>

  <!-- ðŸ”¹ Table / Placeholder -->
<div class="card shadow-sm border-0 table-block p-4">
  <template v-if="tableData.length">
    <div class="d-flex justify-content-end mb-3">
      <input
        v-model="globalSearch"
        class="form-control custom-search-input"
        placeholder="Search..."
      />
    </div>

    <div class="table-responsive custom-table-wrapper">
      <EasyDataTable
        :headers="headers"
        :items="tableData"
        :rows-per-page="10"
        :rows-per-page-options="[10, 25, 50]"
        show-index
        :search-value="globalSearch"
        :search-field="['Ait', 'App Name', 'Tech Executive']"
        class="custom-table"
      >
        <template #item-status="{ status }">
          <span v-html="statusClass(status)"></span>
        </template>
      </EasyDataTable>
    </div>
  </template>

  <template v-else>
    <div class="placeholder-message text-muted text-center py-5">
      No data available. Please select options and click search.
    </div>
  </template>
</div>
  </div>
</template>

<script setup>
import { ref } from 'vue'
import EasyDataTable from 'vue3-easy-data-table'
import 'vue3-easy-data-table/dist/style.css'
// import axios from 'axios' // ðŸ‘‰ Enable for live data

const selectedBranch = ref('%2025.08%')
const selectedArtifact = ref('')
const selectedEnvironment = ref('')
const codeDrop = ref(true)
const globalSearch = ref('')
const tableData = ref([])

const branchOptions = [
  '%2025.05%', '%2025.08%', '%2025.11%',
  '%2026.02%', '%2026.05%', '%2026.08%', '%2026.11%',
]
const artifactTypes = ['java', 'node', 'python']
const environments = ['SIT1', 'UAT1', 'PROD']

const headers = [
  { text: 'AIT', value: 'Ait', sortable: true },
  { text: 'Ansible Job Name', value: 'Ansible Job Name', sortable: true },
  { text: 'App Name', value: 'App Name', sortable: true },
  { text: 'Status', value: 'status', sortable: true },
  { text: 'Tech Executive', value: 'Tech Executive', sortable: true },
]

const statusClass = (status) => {
  if (status === 'Green') return '<i class="fas fa-circle-check text-success fs-5"></i>'
  if (status === 'Red') return '<i class="fas fa-circle-xmark text-danger fs-5"></i>'
  return '<i class="fas fa-circle text-muted fs-5"></i>'
}

const fetchReport = async () => {
  const release = selectedBranch.value.replace(/%/g, '')
  const artifact = selectedArtifact.value
  const env = selectedEnvironment.value
  const dropValue = codeDrop.value ? 'Y' : 'N'

  if (!release || !artifact || !env) {
    tableData.value = []
    return
  }

  const url = `url`

  try {
    // const response = await axios.get(url)
    // tableData.value = response.data

    tableData.value = [
      {
        Ait: '63666',
        'Ansible Job Name': 'EED_eed_ear',
        'App Name': 'EED',
        status: 'Green',
        'Tech Executive': 'Ketul Vyas',
      },
     
    ]
  } catch (error) {
    console.error('API fetch error:', error)
    tableData.value = []
  }
}
</script>

<style scoped>
.report-wrapper {
  max-width: 1280px;
  margin: 50px auto;
  padding: 0 16px;
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
}

.form-block {
  background-color: white;
  border-radius: 16px;
  padding: 32px;
  box-shadow: 0 10px 24px rgba(0, 0, 0, 0.06);
}

.fixed-select {
  width: 260px;
  min-height: 44px;
  font-size: 15px;
  padding: 8px 12px;
}

.row.g-3.align-items-center {
  display: flex;
  flex-wrap: wrap;
  gap: 24px;
}

.form-label {
  font-weight: 600;
  font-size: 14px;
  margin-bottom: 6px;
  color: #333;
}

.search-button {
  min-height: 44px;
  min-width: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 24px;
  font-size: 18px;
  border-radius: 12px;
  box-shadow: 0 6px 12px rgba(65, 88, 166, 0.15);
}

.custom-search-input {
  max-width: 250px;
  font-size: 14px;
  padding: 6px 12px;
  border-radius: 8px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
}

.placeholder-message {
  font-size: 0.95rem;
  opacity: 0.6;
}

.table-block {
  min-height: 300px;
  transition: all 0.3s ease;
  border-radius: 12px;
}

/* Table Styling */
::v-deep(.vue3-easy-data-table__header) {
  background-color: #f6f6f6 !important;
}

::v-deep(.vue3-easy-data-table__header th) {
  background-color: #f6f6f6 !important;
  font-weight: 600;
  color: #333;
}

::v-deep(.vue3-easy-data-table__body tr:nth-child(even)) {
  background-color: #f6f6f6;
}


</style>
