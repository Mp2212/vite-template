// Function to fetch data and create the chart
const createTopEnvironmentsChart = async () => {
    const ctx = document.getElementById('topEnvironmentsChart').getContext('2d');
    
    try {
        // Fetch data from the API
        const response = await fetch('/adasdasdasdadas/asdssde', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                techExec: "",
                ait: "",
                spk: "",
                env: "",
                timeFrame: "week",
                isProd: "true"
            })
        });

        if (!response.ok) throw new Error('Failed to fetch data from the API');

        const data = await response.json();

        // Process the data to extract top 20 items
        const sortedData = Object.entries(data)
            .sort(([, a], [, b]) => b - a) // Sort by count descending
            .slice(0, 20); // Take top 20

        const labels = sortedData.map(([key]) => key); // Extract keys for labels
        const counts = sortedData.map(([, value]) => value); // Extract values for data

        // Create the bar chart
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels, // Use extracted labels
                datasets: [{
                    label: 'Top 20 Environments and Builds',
                    data: counts, // Use extracted counts
                    backgroundColor: [
                        '#80BCBD', '#98DDCA', '#FF6464', '#F7A76C',
                        '#80BCBD', '#98DDCA', '#FF6464', '#F7A76C',
                        '#80BCBD', '#98DDCA', '#FF6464', '#F7A76C',
                        '#80BCBD', '#98DDCA', '#FF6464', '#F7A76C',
                        '#80BCBD', '#98DDCA', '#FF6464', '#F7A76C'
                    ]
                }]
            },
            options: {
                plugins: {
                    legend: { display: true },
                    datalabels: {
                        color: '#fff',
                        anchor: 'end',
                        align: 'top',
                        formatter: Math.round
                    }
                },
                maintainAspectRatio: false,
                responsive: true,
                layout: {
                    padding: 10
                }
            }
        });

    } catch (error) {
        console.error('Error creating the chart:', error);
    }
};